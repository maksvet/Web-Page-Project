{"ast":null,"code":"var _jsxFileName = \"/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport ReactDOM from \"react-dom\"; //import \"./styles.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resume_crud_1 = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"test\",\n        ...register(\"example\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"exampleRequired\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_s(Resume_crud_1, \"77WzwRY2adCYNFA0cLnNubMUW6o=\", false, function () {\n  return [useForm];\n});\n\n_c = Resume_crud_1;\nexport default Resume_crud_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume_crud_1\");","map":{"version":3,"sources":["/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js"],"names":["React","useForm","useFieldArray","Controller","ReactDOM","Resume_crud_1","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,UAAjC,QAAmD,iBAAnD;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2DT,OAAO,EAAxE;;AACA,QAAMU,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EAJwB,CAIO;;AAE/B;AAAA;;AACE;AACA;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,8BAEE;AAAO,QAAA,YAAY,EAAC,MAApB;AAAA,WAA+BL,QAAQ,CAAC,SAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,sBAAWA,QAAQ,CAAC,iBAAD,EAAoB;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAAnB;AAAA;AAAA;AAAA;AAAA,cALF,EAOGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP7B,eASE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAcH,CApBD;;GAAMX,a;UAC+DJ,O;;;KAD/DI,a;AAsBN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport ReactDOM from \"react-dom\";\n\n//import \"./styles.css\";\n\nconst Resume_crud_1 = () => {\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const onSubmit = data => console.log(data);\n  \n    console.log(watch(\"example\")); // watch input value by passing the name of it\n  \n    return (\n      /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* register your input into the hook by invoking the \"register\" function */}\n        <input defaultValue=\"test\" {...register(\"example\")} />\n        \n        {/* include validation with required or other standard HTML validation rules */}\n        <input {...register(\"exampleRequired\", { required: true })} />\n        {/* errors will return when field validation fails  */}\n        {errors.exampleRequired && <span>This field is required</span>}\n        \n        <input type=\"submit\" />\n      </form>\n    );\n}\n\nexport default Resume_crud_1"]},"metadata":{},"sourceType":"module"}