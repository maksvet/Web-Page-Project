{"ast":null,"code":"var _jsxFileName = \"/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport ReactDOM from \"react-dom\"; //import \"./styles.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resume_crud_1 = () => {\n  _s();\n\n  const {\n    register,\n    control,\n    handleSubmit,\n    reset\n  } = useForm({\n    defaultValues: {\n      test: [{\n        firstName: \"Bill\",\n        lastName: \"Luo\",\n        resume: \"Resume\"\n      }]\n    }\n  });\n  const {\n    fields,\n    remove,\n    insert\n  } = useFieldArray({\n    control,\n    name: \"test\"\n  });\n\n  const onSubmit = data => console.log(\"data\", data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fields.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: `test[${index}].firstName`,\n            defaultValue: `${item.firstName}` // make sure to set up defaultValue\n            ,\n            ref: register()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this),\n            name: `test[${index}].lastName`,\n            control: control,\n            defaultValue: item.lastName // make sure to set up defaultValue\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this),\n            name: `test[${index}].resume`,\n            control: control,\n            defaultValue: item.resume // make sure to set up defaultValue\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => remove(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => insert(parseInt(2, 10), {\n          firstName: \"insertFirstName\",\n          lastName: \"insertLastName\",\n          resume: \"nothing new\"\n        }),\n        children: \"insert at\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => reset({\n          test: [{\n            firstName: \"Bill\",\n            lastName: \"Luo\",\n            resume: \"nothing new\"\n          }]\n        }),\n        children: \"reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Resume_crud_1, \"mASH87/BMyc3iYD9FupEP6e0FqE=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = Resume_crud_1;\nexport default Resume_crud_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume_crud_1\");","map":{"version":3,"sources":["/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js"],"names":["React","useForm","useFieldArray","Controller","ReactDOM","Resume_crud_1","register","control","handleSubmit","reset","defaultValues","test","firstName","lastName","resume","fields","remove","insert","name","onSubmit","data","console","log","map","item","index","id","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport ReactDOM from \"react-dom\";\n\n//import \"./styles.css\";\n\nconst Resume_crud_1 = () => {\n  const { register, control, handleSubmit, reset } = useForm({\n    defaultValues: {\n      test: [{ firstName: \"Bill\", lastName: \"Luo\", resume: \"Resume\" }]\n    }\n  });\n  const { fields, remove, insert } = useFieldArray({\n    control,\n    name: \"test\"\n  });\n\n  const onSubmit = (data) => console.log(\"data\", data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <ul>\n        {fields.map((item, index) => {\n          return (\n            <li key={item.id}>\n              <input\n                name={`test[${index}].firstName`}\n                defaultValue={`${item.firstName}`} // make sure to set up defaultValue\n                ref={register()}\n              />\n\n              <Controller\n                as={<input />}\n                name={`test[${index}].lastName`}\n                control={control}\n                defaultValue={item.lastName} // make sure to set up defaultValue\n              />\n              <Controller\n                as={<input />}\n                name={`test[${index}].resume`}\n                control={control}\n                defaultValue={item.resume} // make sure to set up defaultValue\n              />\n              <button type=\"button\" onClick={() => remove(index)}>\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      <section>\n        <button\n          type=\"button\"\n          onClick={() =>\n            insert(parseInt(2, 10), {\n              firstName: \"insertFirstName\",\n              lastName: \"insertLastName\",\n              resume: \"nothing new\"\n            })\n          }\n        >\n          insert at\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() =>\n            reset({\n              test: [\n                { firstName: \"Bill\", lastName: \"Luo\", resume: \"nothing new\" }\n              ]\n            })\n          }\n        >\n          reset\n        </button>\n      </section>\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default Resume_crud_1"]},"metadata":{},"sourceType":"module"}