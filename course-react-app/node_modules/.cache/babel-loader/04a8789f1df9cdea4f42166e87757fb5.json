{"ast":null,"code":"var _jsxFileName = \"/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\"; //import \"./styles.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resume_crud_1 = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [resume, setResume] = useState({\n    personal_info: [],\n    skills: [],\n    qualifications: [],\n    work_experience: [],\n    education: [],\n    training: []\n  });\n  const [values, setValues] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    street_address: \"\",\n    country: \"\",\n    province: \"\",\n    city: \"\"\n  });\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\"http://localhost:3008/resume\");\n      res.json().then(res => setResume(res)); //.catch((err) => setErrors(err));\n    }\n\n    fetchData();\n  }, []);\n  const data = resume.personal_info[0];\n  useEffect(() => {\n    if (data) {\n      setValues({\n        name: data.name,\n        phone: data.phone,\n        email: data.email,\n        street_address: data.street_address,\n        country: data.country,\n        province: data.province,\n        city: data.city\n      });\n    }\n  }, [resume]); //console.log(values)\n  //console.log(resume)\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\"),\n      Value: values.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"phone\"),\n      Value: values.phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\"),\n      Value: values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street_address\"),\n      Value: values.street_address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\"),\n      Value: values.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"province\"),\n      Value: values.province\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"country\"),\n      Value: values.country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Resume_crud_1, \"57Cp/m9mfLiyE37a20I3J7389vU=\", false, function () {\n  return [useForm];\n});\n\n_c = Resume_crud_1;\nexport default Resume_crud_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume_crud_1\");","map":{"version":3,"sources":["/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js"],"names":["React","useForm","Controller","useState","useEffect","ReactDOM","Resume_crud_1","register","handleSubmit","resume","setResume","personal_info","skills","qualifications","work_experience","education","training","values","setValues","name","phone","email","street_address","country","province","city","fetchData","res","fetch","json","then","data","onSubmit","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//import \"./styles.css\";\n\nconst Resume_crud_1 = () => {\nconst { register, handleSubmit } = useForm()     \nconst [resume, setResume] = useState({\n    personal_info : [],\n    skills: [],\n    qualifications: [],\n    work_experience: [],\n    education: [],\n    training: []\n});\n\n          const [values, setValues] = useState({\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            street_address: \"\",\n            country: \"\",\n            province: \"\",\n            city: \"\"\n          })\n          useEffect(() => {\n            async function fetchData() {\n            const res = await fetch(\"http://localhost:3008/resume\");\n            res.json().then((res) => setResume(res));\n              //.catch((err) => setErrors(err));\n            }\n            fetchData();\n        }, []);\n        const data = resume.personal_info[0]\n      useEffect(() => {\n        if(data) {\n          setValues({\n            name: data.name,\n            phone: data.phone,\n            email: data.email,\n            street_address: data.street_address,\n            country: data.country,\n            province: data.province,\n            city: data.city\n          })\n        }\n      }, [resume])\n\n//console.log(values)\n\n\n      //console.log(resume)\n      const onSubmit = data => console.log(data);\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n       \n        <input {...register(\"name\")} Value={values.name}/> \n        <input {...register(\"phone\")} Value={values.phone}/>\n        <input {...register(\"email\")} Value={values.email}/>\n        <input {...register(\"street_address\")} Value={values.street_address}/>\n        <input {...register(\"city\")} Value={values.city}/>\n        <input {...register(\"province\")} Value={values.province}/>\n        <input {...register(\"country\")} Value={values.country}/>\n    \n       {/* {errors.exampleRequired && <span>This field is required</span>} */}\n        \n        <input type=\"submit\" />\n      </form>\n    );\n}\n\nexport default Resume_crud_1"]},"metadata":{},"sourceType":"module"}