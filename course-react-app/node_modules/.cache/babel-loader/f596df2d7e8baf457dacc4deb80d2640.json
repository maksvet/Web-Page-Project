{"ast":null,"code":"var _jsxFileName = \"/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\"; //import \"./styles.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resume_crud_1 = () => {\n  _s();\n\n  const [resume, setResume] = useState({\n    personal_info: [],\n    skills: [],\n    qualifications: [],\n    work_experience: [],\n    education: [],\n    training: []\n  });\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [values, setValues] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    street_address: \"\",\n    country: \"\",\n    province: \"\",\n    city: \"\"\n  });\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\"http://localhost:3008/resume\");\n      res.json().then(res => setResume(res));\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (resume) {\n      setValues({\n        name: resume.personal_info[0].name,\n        phone: resume.personal_info[0].phone,\n        email: resume.personal_info[0].email,\n        street_address: resume.personal_info[0].street_address,\n        country: resume.personal_info[0].country,\n        province: resume.personal_info[0].province,\n        city: resume.personal_info[0].city\n      });\n    }\n  }, [resume]);\n  console.log(values);\n  console.log(resume.personal_info); //console.log(resume)\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\"),\n      defaultValue: values.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"phone\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street_address\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"province\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"country\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Resume_crud_1, \"jhSrSrHNac6VA6CiaD/iThNA0bE=\", false, function () {\n  return [useForm];\n});\n\n_c = Resume_crud_1;\nexport default Resume_crud_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume_crud_1\");","map":{"version":3,"sources":["/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js"],"names":["React","useForm","Controller","useState","useEffect","ReactDOM","Resume_crud_1","resume","setResume","personal_info","skills","qualifications","work_experience","education","training","register","handleSubmit","values","setValues","name","phone","email","street_address","country","province","city","fetchData","res","fetch","json","then","console","log","onSubmit","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//import \"./styles.css\";\n\nconst Resume_crud_1 = () => {\n  const [resume, setResume] = useState({\n    personal_info: [],\n    skills: [],\n    qualifications: [],\n    work_experience: [],\n    education: [],\n    training: [],\n  });\n\n  const { register, handleSubmit } = useForm();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    street_address: \"\",\n    country: \"\",\n    province: \"\",\n    city: \"\",\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\"http://localhost:3008/resume\");\n      res.json().then((res) => setResume(res));\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (resume) {\n      setValues({\n        name: resume.personal_info[0].name,\n        phone: resume.personal_info[0].phone,\n        email: resume.personal_info[0].email,\n        street_address: resume.personal_info[0].street_address,\n        country: resume.personal_info[0].country,\n        province: resume.personal_info[0].province,\n        city: resume.personal_info[0].city,\n      });\n    }\n  }, [resume]);\n\n  console.log(values);\n  console.log(resume.personal_info);\n\n  //console.log(resume)\n  const onSubmit = (data) => console.log(data);\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input {...register(\"name\")} defaultValue={values.name} />\n      <input {...register(\"phone\")} />\n      <input {...register(\"email\")} />\n      <input {...register(\"street_address\")} />\n      <input {...register(\"city\")} />\n      <input {...register(\"province\")} />\n      <input {...register(\"country\")} />\n\n      {/* {errors.exampleRequired && <span>This field is required</span>} */}\n\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default Resume_crud_1;\n"]},"metadata":{},"sourceType":"module"}