{"ast":null,"code":"var _jsxFileName = \"/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_skill.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resume_skill = props => {\n  _s();\n\n  let id = props.match.params.id;\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [resume, setResume] = useState({\n    personal_info: [],\n    skills: [],\n    qualifications: [],\n    work_experience: [],\n    education: [],\n    training: []\n  });\n  const [values, setValues] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    street_address: \"\",\n    country: \"\",\n    province: \"\",\n    city: \"\"\n  });\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\"http://localhost:3008/resume\");\n      res.json().then(res => setResume(res)); //.catch((err) => setErrors(err));\n    }\n\n    fetchData();\n  }, []);\n  const data = resume.skills[0];\n  useEffect(() => {\n    if (data) {\n      setValues({\n        skill: data.skill\n      });\n    }\n  }, [data]); // If field not touched submit returns empty value\n  // handleSubmit( (data, id) =>\n  //     fetch(`/resume/skill/${id}`, {\n  //     method: \"put\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(data),\n  //   }).then((response) => response.json())\n  // console.log()\n  // )\n  // handleSubmit(async data => {\n  //   const response = await fetch(`http://localhost:3008/resume/skill/${id}`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(data)\n  //   });\n  //   console.log(response)\n  //   return response.json();\n  // });\n\n  const onSubmit = async data => {\n    await data;\n    const response = await fetch(`http://localhost:3008/resume/skill/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(response);\n    return response.json();\n  }; // {\n  //     await data;\n  //     console.log(data)\n  //     return data\n  //     //reset();\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"skill\"),\n      Value: values.skill\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Resume_skill, \"LgjWaA4dAXkTLCZrrVcz1P3wx1g=\", false, function () {\n  return [useForm];\n});\n\n_c = Resume_skill;\nexport default Resume_skill;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resume_skill\");","map":{"version":3,"sources":["/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_skill.js"],"names":["React","useForm","useState","useEffect","ReactDOM","Resume_skill","props","id","match","params","register","handleSubmit","reset","resume","setResume","personal_info","skills","qualifications","work_experience","education","training","values","setValues","name","phone","email","street_address","country","province","city","fetchData","res","fetch","json","then","data","skill","onSubmit","response","method","headers","body","JSON","stringify","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n\nconst Resume_skill = (props) => {\n  let id = props.match.params.id;\n  \nconst { register, handleSubmit, reset } = useForm()     \nconst [resume, setResume] = useState({\n  personal_info : [],\n  skills: [],\n  qualifications: [],\n  work_experience: [],\n  education: [],\n  training: []\n});\n\n        const [values, setValues] = useState({\n          name: \"\",\n          phone: \"\",\n          email: \"\",\n          street_address: \"\",\n          country: \"\",\n          province: \"\",\n          city: \"\"\n        })\n        useEffect(() => {\n          async function fetchData() {\n          const res = await fetch(\"http://localhost:3008/resume\");\n          res.json().then((res) => setResume(res));\n            //.catch((err) => setErrors(err));\n          }\n          fetchData();\n      }, []);\n      const data = resume.skills[0]\n    useEffect(() => {\n      if(data) {\n        setValues({\n          skill: data.skill\n        })\n      }\n    }, [data])\n// If field not touched submit returns empty value\n\n// handleSubmit( (data, id) =>\n//     fetch(`/resume/skill/${id}`, {\n//     method: \"put\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(data),\n//   }).then((response) => response.json())\n// console.log()\n// )\n\n\n// handleSubmit(async data => {\n//   const response = await fetch(`http://localhost:3008/resume/skill/${id}`, {\n//     method: \"PUT\",\n//     headers: {\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(data)\n//   });\n//   console.log(response)\n//   return response.json();\n// });\n\nconst onSubmit = async data => {\n  await data\n  const response = await fetch(`http://localhost:3008/resume/skill/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  console.log(response)\n  return response.json();\n}\n\n\n\n\n// {\n//     await data;\n//     console.log(data)\n//     return data\n//     //reset();\n\n\n\n//   };\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n       \n        <input {...register(\"skill\")} Value={values.skill}/>\n    \n        \n        <input type=\"submit\" />\n      </form>\n    );\n}\n\nexport default Resume_skill"]},"metadata":{},"sourceType":"module"}