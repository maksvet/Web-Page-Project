[{"/Users/MakSim/FS1030CourseProject/course-react-app/src/index.js":"1","/Users/MakSim/FS1030CourseProject/course-react-app/src/Main.js":"2","/Users/MakSim/FS1030CourseProject/course-react-app/src/Home.js":"3","/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume.js":"4","/Users/MakSim/FS1030CourseProject/course-react-app/src/Contact.js":"5","/Users/MakSim/FS1030CourseProject/course-react-app/src/Portfolio.js":"6","/Users/MakSim/FS1030CourseProject/course-react-app/src/Hobbies.js":"7","/Users/MakSim/FS1030CourseProject/course-react-app/src/Login.js":"8","/Users/MakSim/FS1030CourseProject/course-react-app/src/entriesPage.js":"9","/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js":"10","/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_skill.js":"11"},{"size":178,"mtime":1618841348873,"results":"12","hashOfConfig":"13"},{"size":1823,"mtime":1620233440896,"results":"14","hashOfConfig":"13"},{"size":541,"mtime":1618841348870,"results":"15","hashOfConfig":"13"},{"size":2932,"mtime":1619986014589,"results":"16","hashOfConfig":"13"},{"size":2040,"mtime":1619748168757,"results":"17","hashOfConfig":"13"},{"size":818,"mtime":1620398689069,"results":"18","hashOfConfig":"13"},{"size":1276,"mtime":1618841348870,"results":"19","hashOfConfig":"13"},{"size":1631,"mtime":1618844624558,"results":"20","hashOfConfig":"13"},{"size":1082,"mtime":1619845143597,"results":"21","hashOfConfig":"13"},{"size":2480,"mtime":1619986014590,"results":"22","hashOfConfig":"13"},{"size":1753,"mtime":1619986014591,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"k76jlv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/Users/MakSim/FS1030CourseProject/course-react-app/src/index.js",[],["50","51"],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Main.js",[],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Home.js",[],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume.js",[],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Contact.js",[],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Portfolio.js",[],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Hobbies.js",[],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Login.js",["52"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n  const Login = (props) => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [jwt, setJwt] = useState(\"\")\n  const formSubmit = async event => {\n    event.preventDefault()\n    const response = await fetch('http://localhost:3008/auth', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({email, password})\n        })\n        const payload = await response.json()\n        if (response.status >= 400) {\n          alert(`Oops! Error: ${payload}`)\n        } else {\n            localStorage.setItem('token', payload.token)\n            setJwt(payload.token)\n            //const storedJwt = localStorage.getItem('token')\n            alert(`You are logged in!`)\n            history.push(\"/entriespage\");\n            \n\n        }\n        \n  }\n\n\n    return(\n        <div>\n        <h1>Admin login</h1>\n      <form onSubmit={formSubmit}>\n      <label htmlFor=\"name\"></label>\n      <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Your email...\" required value={email} onChange={e => setEmail(e.target.value)}/>\n  \n      <label htmlFor=\"password\"></label>\n      <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Your password...\" required value={password} onChange={e => setPassword(e.target.value)}/>\n    <input type=\"submit\" value=\"Submit\"/>\n    </form>\n    </div>\n   )\n    \n  \n}\n \nexport default Login;","/Users/MakSim/FS1030CourseProject/course-react-app/src/entriesPage.js",[],"/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_crud_1.js",["53","54"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//import \"./styles.css\";\n\nconst Resume_crud_1 = () => {\nconst { register, handleSubmit, reset } = useForm()     \nconst [resume, setResume] = useState({\n    personal_info : [],\n    skills: [],\n    qualifications: [],\n    work_experience: [],\n    education: [],\n    training: []\n});\n\n          const [values, setValues] = useState({\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            street_address: \"\",\n            country: \"\",\n            province: \"\",\n            city: \"\"\n          })\n          useEffect(() => {\n            async function fetchData() {\n            const res = await fetch(\"http://localhost:3008/resume\");\n            res.json().then((res) => setResume(res));\n              //.catch((err) => setErrors(err));\n            }\n            fetchData();\n        }, []);\n        const data = resume.personal_info[0]\n      useEffect(() => {\n        if(data) {\n          setValues({\n            name: data.name,\n            phone: data.phone,\n            email: data.email,\n            street_address: data.street_address,\n            country: data.country,\n            province: data.province,\n            city: data.city\n          })\n        }\n      }, [data])\n\n// If field not touched submit returns empty value\n\n\n// handleSubmit(async (data) => await\n//     fetch(`http://localhost:3008/resume/personal`, {\n//     method: \"put\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//     },\n\n//     //make sure to serialize your JSON body\n//     body: JSON.stringify(data),\n//   }).then((response) => response.json())\n\n// )\n\nconst onSubmit = async data => {\n    await data;\n    console.log(data)\n    //reset();\n\n\n\n  };\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n       \n        <input {...register(\"name\")} Value={values.name}/> \n        <input {...register(\"phone\")} Value={values.phone}/>\n        <input {...register(\"email\")} Value={values.email}/>\n        <input {...register(\"street_address\")} Value={values.street_address}/>\n        <input {...register(\"city\")} Value={values.city}/>\n        <input {...register(\"province\")} Value={values.province}/>\n        <input {...register(\"country\")} Value={values.country}/>\n    \n        \n        <input type=\"submit\" />\n      </form>\n    );\n}\n\nexport default Resume_crud_1","/Users/MakSim/FS1030CourseProject/course-react-app/src/Resume_skill.js",["55","56"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n\nconst Resume_skill = (props) => {\n  let id = props.match.params.id;\n  \nconst { register, handleSubmit, reset } = useForm()     \nconst [resume, setResume] = useState({\n  personal_info : [],\n  skills: [],\n  qualifications: [],\n  work_experience: [],\n  education: [],\n  training: []\n});\n\n        const [values, setValues] = useState({\n          name: \"\",\n          phone: \"\",\n          email: \"\",\n          street_address: \"\",\n          country: \"\",\n          province: \"\",\n          city: \"\"\n        })\n        useEffect(() => {\n          async function fetchData() {\n          const res = await fetch(\"http://localhost:3008/resume\");\n          res.json().then((res) => setResume(res));\n            //.catch((err) => setErrors(err));\n          }\n          fetchData();\n      }, []);\n      const data = resume.skills[0]\n    useEffect(() => {\n      if(data) {\n        setValues({\n          skill: data.skill\n        })\n      }\n    }, [data])\n\n\n    // If entry field is not touched by user submit returns empty value\n\n\nconst onSubmit = async data => {\n  await data\n  const response = await fetch(`http://localhost:3008/resume/skill/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  alert('Skill field successfully updated!')\n  return response.json();\n}\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor=\"skill\">Edit skill</label>\n        <input {...register(\"skill\")} Value={values.skill} />\n    \n        \n        <input type=\"submit\" />\n      </form>\n    );\n}\n\nexport default Resume_skill",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":16},{"ruleId":"61","severity":1,"message":"66","line":9,"column":33,"nodeType":"63","messageId":"64","endLine":9,"endColumn":38},{"ruleId":"61","severity":1,"message":"65","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":16},{"ruleId":"61","severity":1,"message":"66","line":11,"column":33,"nodeType":"63","messageId":"64","endLine":11,"endColumn":38},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'jwt' is assigned a value but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'reset' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]